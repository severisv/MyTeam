@using System
@using System.Threading.Tasks
@using Microsoft.AspNetCore.Mvc.Rendering
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using MyTeam
@using MyTeam.Models.Enums
@using MyTeam.Resources
@using MyTeam.Settings
@model MyTeam.ViewModels.Events.EventViewModel
<hr />
<div class="show-upcoming-event">
    @Html.Partial("_EditButton")
    <div id="event-@Model.Id" class="hashlink-anchor"></div>
    <div class="show-event-container">
        <div class="event-col-1 event-icon">
            <div>
                <a href="#event-@Model.Id">
                <span mt-eventtype="@Model.Type" mt-hidename="true"></span>
                    </a>
        </div>
        </div>
        <div class="event-col-2">
            <p>
                <i class="fa fa-calendar"></i> @Model.DateTime.ToNo()@if (Model.DateTime.Year != DateTime.Now.Year)
                                                                     {<span> @Model.DateTime.Year</span>}
            </p>
            <p>
                <i class="fa fa-clock-o"></i> @Model.DateTime.ToString("HH:mm")
            </p>
            <p>
                <i class="fa fa-map-marker"></i> @Html.DisplayFor(m => m.Location)
            </p>
            @if (Model.Voluntary == true)
            {
                <p>
                    <i class="fa fa-asterisk"></i> @($"{Res.Voluntary} {Res.Attendance.ToLower()}")
                </p>
            }
        </div>
        <div class="event-col-3 ">
            @if (Model.Type == EventType.Diverse)
            {
                <h3 class="no-margin">@Html.DisplayFor(m => m.Headline)</h3>
            }
            else if (Model.Type == EventType.Kamp)
            {

                    <h3 class="no-margin">@Model.Team(Context.GetClub().Teams).ShortName <span class="event-opponentDivider">vs</span> @Html.DisplayFor(m => m.Opponent)</h3>
                    <p>
                    <i class="@Icons.GameType(Model.GameType)"></i>&nbsp;@Model.GameType
                </p>

            }
            <span class="description">
                @Html.DisplayFor(m => m.Description)
            </span>
            
        </div>
    </div>
    <div class="clearfix"></div>
</div>







