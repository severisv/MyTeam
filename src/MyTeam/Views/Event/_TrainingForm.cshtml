@using System.Threading.Tasks
@using Microsoft.Data.Entity.Metadata.Internal
@using MyTeam.Models.Enums
@using MyTeam.Resources
@model MyTeam.ViewModels.Events.CreateEventViewModel

@if (Model.Type == EventType.Trening)
{
    <div class="form-group">
        <label class="col-xs-2 control-label" asp-for="TeamIds"></label>
        <div class="col-xs-10">
            <select name="TeamIds" class="form-control event-teamSelect" multiple>
                @for (int i = 0; i < Model.Teams.Count(); i++)
                {
                    var team = Model.Teams[i];
                    if (Model.TeamIds.Any(t => t == team.Id))
                    {
                        <option selected value="@team.Id">@team.Name</option>

                    }
                    else
                    {
                        <option value="@team.Id">@team.Name</option>

                    }

                }
            </select>

            @for (int i = 0; i < Model.Teams.Count(); i++)
                {
                <input type="hidden" asp-for="Teams[i].Id" />
                <input type="hidden" asp-for="Teams[i].Name" />
            }
            <span asp-validation-for="TeamIds" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group">
        <label mt-for="Mandatory" mt-icon="asterisk" class="col-xs-2 control-label"></label>
        <div class="col-xs-10">
            <input asp-for="Mandatory" type="checkbox" class="form-control" />
            <a mt-tooltip="@Res.MandatoryExplaination"></a>
            <span asp-validation-for="Mandatory" class="text-danger"></span>
        </div>
    </div>
    if (!Model.IsEditMode)
    {
        <div class="form-group">
            <label mt-for="Recurring" mt-icon="refresh" class="col-xs-2 control-label"></label>
            <div class="col-xs-10 flex">
                <div class="flex-1">
                    <input asp-for="Recurring" type="checkbox" class="form-control" onclick="window.checkbox.showHideAssociatedElement(this, '#ToDateWrapper')" />
                    <a mt-tooltip="@Res.RecurringExplaination"></a>
                </div>
                <div class="flex-2">
                    <span id="ToDateWrapper" @(Model.Recurring ? String.Empty : "hidden")>
                        <span class="datepicker" data-value="@Html.DisplayFor(m => m.ToDate)" id="ToDate">
                            <input asp-for="ToDate" type="text" class="form-control" />
                        </span>
                    </span>
                </div>
            </div>
            <div class="col-xs-offset-2 col-xs-10 flex">
                <span asp-validation-for="Recurring" class="text-danger"></span>
                <span asp-validation-for="ToDate" class="text-danger"></span>
            </div>


        </div>
    }

}

